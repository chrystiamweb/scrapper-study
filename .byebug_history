continue
posts.last
continue
title
post
continue
keep
continue
post
continue
page
continue
page
continue
post_cards.count
posts_card.count
posts_cards.count
parsed_page.count
parsed_page
posts
exit
posts.first[:title]
posts.each do |post|
posts
post
exit
unparsed_pageex
unparsed_page
parsed_page
url
posts
exit
posts.last
posst.last
post.last
exit
bigpost.css('a')[2].text
bigpost.css('a')[2]
bigpost.css('a')[1]
bigpost.css('a').[1]
bigpost.css('a')[1]
bigpost.css('a').first
bigpost.to_json
bigpost
bigpost.css('a').first
bigpost.css('a').last
bigpost.css('a').first.values
bigpost.css('a').first.value
bigpost.css('a').first.text
bigpost.css('a').first
bigpost.css('a').first.text
post
exit
posts.last
continue
bigpost
continue
exit
pagetoget.css('div.post-big')
pagetotest.css('div.post-big')
pagetotest('div.post-big')
pagetoget.css('div.big-post')
pagetoget.css('div-post')
pagetoget
bigpost
exit
parsed_page
bigpost
bigpost.css('a').first.text 
exit
specific.css('div.info').children[0].text
specific.css('div.info').children[1].text
specific.css('div.info').children[1].values
specific.css('div.info').children[1].value
specific.css('div.info').children[1]
specific.css('div.info').children[3]
specific.css('div.info').children[2]
specific.css('div.info').children
specific.css('div.info')
specific.css('div-info')
specific.css('a').children[1].text
specific.css('div.info').text
specific.css('a').text
specific.css('a')
specific.css('div.texts a')
specific.css('div.texts a').first.text
specific = parsed_page.css('div.post-big')
specific = parsed_page.css('div.bigpost')
continue
posts.first
exit
puts posts.first[:created_at]exit
puts posts.first[:created_at]
puts posts\.first[:created_at]
puts post.first[:created_at]
posts.first
posts.first.created_at
post.first.created_at
exit
post_cards.css('div.info')[2].children[0].text
post_cards.css('div.info')[1].children[0].text
post_cards.css('div.info')[0].children[0].text
posts
exit
post_cards.css('div.info')[0].children[0].text
post_cards.css('div.info')[0].children[0]
post_cards.css('div.info')[0].children
post_cards.css('div.info')[0].attributes
post_cards.css('div.info')[0]
post_cards.css('div.info')[0].attributes['children'].value
post_cards.css('div.info')[0].attributes['children'].velue
post_cards.css('div.info')[0].attributes['children']
post_cards.css('div.info')[0].attribute['children']
post_cards.first.css('div.info').attribute['children']
post_cards.first.css('div.info').attributes['children']
post_cards.first.css('div.info atributes chiledren')
post_cards.first.css('div.info').attribute.children
post_cards.first.css('div.info').attributes.children
post_cards.first.css('div.info children')
post_cards.first.css('div.info children').text
post_cards.first.css('div.info').text.humanize
post_cards.first.css('div.info').text.normalize
post_cards.first.css('div.info').text
post_cards.first.css('div.info')
posts.first
posts.count.first
posts.count
exit
post_cards.css('article.bloco div.texts a')[1exit].text
post_cards.css('article.bloco div.texts a')[1].text
post_cards.css('article.bloco div.texts a')[3].text
post_cards.css('article.bloco div.texts a')[4].text
exit
post_cards.css('article.bloco div.texts a')[4].text
post_cards.css('article.bloco div.texts a').first.count
post_cards.css('article.bloco div.texts a').count
post_cards.css('article.bloco div.texts a').cont
post_cards.css('article.bloco div.texts a').text
post_cards.css('article.bloco div.texts a').first
post_cards.css('article.bloco')
post_cards.css('div.bloco')
error = post_cards[4].css('a').first.text
error = post_cards[4].css('a').first
error = post_cards[4].css('a')
error = post_cards[4]
post_cards[4]
exit
continue
post
post[:author]
post[:title]
post[:title}
post.title
post
continue
f
first_card.css('div.texts a children')
first_card.css('div.texts a').first.text
first_card.css('div.texts a').first
first_card.css('div.texts a')
first_card.css('div.texts a').text
first_card.css('div.texts a #text').text
first_card.css('div.texts #text').text
first_card.css('div.texts a').text
first_card.css('div.texts a')
first_card.css('div.texts')
first_card
first_card.css('div.text')
first_card.css('div#text')
first_card.css(div.text)
first_card.css(div#text)
first_card = cards.first
cards.count
cards = parsed_page.css('div.grid4')
parsed_page.css('div.grid4')
exit
unparsed_page
